"use strict";(self.webpackChunkuniversity_docs=self.webpackChunkuniversity_docs||[]).push([[2474],{3905:function(e,r,t){t.d(r,{Zo:function(){return c},kt:function(){return m}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function i(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var d=n.createContext({}),s=function(e){var r=n.useContext(d),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},c=function(e){var r=s(e.components);return n.createElement(d.Provider,{value:r},e.children)},u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},p=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=s(t),m=a,g=p["".concat(d,".").concat(m)]||p[m]||u[m]||o;return t?n.createElement(g,l(l({ref:r},c),{},{components:t})):n.createElement(g,l({ref:r},c))}));function m(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,l=new Array(o);l[0]=p;var i={};for(var d in r)hasOwnProperty.call(r,d)&&(i[d]=r[d]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=t[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5955:function(e,r,t){t.r(r),t.d(r,{frontMatter:function(){return i},contentTitle:function(){return d},metadata:function(){return s},toc:function(){return c},default:function(){return p}});var n=t(7462),a=t(3366),o=(t(7294),t(3905)),l=["components"],i={id:"flutter16",title:"Formularios y Estilos"},d=void 0,s={unversionedId:"flutter/flutter16",id:"flutter/flutter16",title:"Formularios y Estilos",description:"Por defecto un TextFormField es decorado con un linea en la parte inferior, pero tambi\xe9n podemos agregrar un icono, etiquetas o texto de sugerencia agregando un InputDecoration en la propiedad decoration.",source:"@site/docs/flutter/flutter16.md",sourceDirName:"flutter",slug:"/flutter/flutter16",permalink:"/cursos/docs/flutter/flutter16",tags:[],version:"current",frontMatter:{id:"flutter16",title:"Formularios y Estilos"},sidebar:"flutterSidebar",previous:{title:"Formularios",permalink:"/cursos/docs/flutter/flutter15"},next:{title:"Tarea Clon de Whatsapp",permalink:"/cursos/docs/flutter/hw-wsp-clone"}},c=[{value:"Crear Widget",id:"crear-widget",children:[],level:2},{value:"Agregar TextFormFields",id:"agregar-textformfields",children:[],level:2},{value:"Agregar bot\xf3n enviar",id:"agregar-bot\xf3n-enviar",children:[],level:2},{value:"TextEditingController",id:"texteditingcontroller",children:[{value:"Crear TextEditingController",id:"crear-texteditingcontroller",children:[],level:3},{value:"Llamar a m\xe9todo dispose()",id:"llamar-a-m\xe9todo-dispose",children:[],level:3},{value:"Asignar controllers",id:"asignar-controllers",children:[],level:3},{value:"Acceder al valor del controller",id:"acceder-al-valor-del-controller",children:[],level:3}],level:2},{value:"Tarea en clases",id:"tarea-en-clases",children:[],level:2}],u={toc:c};function p(e){var r=e.components,t=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Por defecto un ",(0,o.kt)("inlineCode",{parentName:"p"},"TextFormField")," es decorado con un linea en la parte inferior, pero tambi\xe9n podemos agregrar un icono, etiquetas o texto de sugerencia agregando un ",(0,o.kt)("inlineCode",{parentName:"p"},"InputDecoration")," en la propiedad ",(0,o.kt)("inlineCode",{parentName:"p"},"decoration"),"."),(0,o.kt)("h2",{id:"crear-widget"},"Crear Widget"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Crear un archivo llamado ",(0,o.kt)("inlineCode",{parentName:"p"},"styled_form_screen.dart"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Crear un widget llamado ",(0,o.kt)("inlineCode",{parentName:"p"},"StyledFormScreen")," que sea ",(0,o.kt)("strong",{parentName:"p"},"stateful"),"."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},'\nclass StyledFormScreen extends StatefulWidget {\n  const StyledFormScreen({Key? key}) : super(key: key);\n\n  @override\n  State<StyledFormScreen> createState() => _StyledFormScreenState();\n}\n\nclass _StyledFormScreenState extends State<StyledFormScreen> {\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(title: const Text("Styled Form"),),\n      body: Container(),\n    );\n  }\n}\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Agregamos a nuestro widget un GlobalKey:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"final _formKey = GlobalKey<FormState>();\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Dentro del Container agregamos nuestro Form:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},'@override\nWidget build(BuildContext context) {\n  return Scaffold(\n    appBar: AppBar(title: const Text("Styled Form"),),\n    body: Container(\n        padding: const EdgeInsets.all(16),\n        child: Form(\n          key: _formKey,\n          child: Column(\n              children: [\n                // ...\n              ],\n          ),\n        ),\n    ),\n  );\n}\n')),(0,o.kt)("h2",{id:"agregar-textformfields"},"Agregar TextFormFields"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Agregamos nuestro primer ",(0,o.kt)("inlineCode",{parentName:"li"},"TextFormField")," para ingresar el correo electr\xf3nico:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"TextFormField(\n  keyboardType: TextInputType.emailAddress,\n  decoration: const InputDecoration(\n    border: OutlineInputBorder(),\n    hintText: 'Ingrese su correo'\n  ),\n  validator: (value) {\n    if (value == null || value.isEmpty) {\n      return 'Ingrese su correo electr\xf3nico';\n    }\n\n    return null;\n  },\n),\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Agregamos nuestro segundo ",(0,o.kt)("inlineCode",{parentName:"li"},"TextFormField")," para ingresar la contrase\xf1a:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"TextFormField(\n  obscureText: true,\n  decoration: const InputDecoration(\n      border: OutlineInputBorder(),\n      hintText: 'Ingrese su contrase\xf1a'\n  ),\n  validator: (value) {\n    if (value == null || value.isEmpty) {\n      return 'Ingrese su contrase\xf1a';\n    }\n\n    return null;\n  },\n),\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Para agregar un espacio entre los TextFields podemos agregar un ",(0,o.kt)("inlineCode",{parentName:"li"},"SizedBox"),":")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"const SizedBox(height: 16),\n")),(0,o.kt)("h2",{id:"agregar-bot\xf3n-enviar"},"Agregar bot\xf3n enviar"),(0,o.kt)("p",null,"Para validar y enviar los datos agregamos un ",(0,o.kt)("inlineCode",{parentName:"p"},"ElevatedButton"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},'ElevatedButton(\n    onPressed: () {\n      // ...\n    },\n    child: const Text("Iniciar sesi\xf3n")\n),\n')),(0,o.kt)("h2",{id:"texteditingcontroller"},"TextEditingController"),(0,o.kt)("p",null,"Para acceder al valor (texto) de nuestros ",(0,o.kt)("inlineCode",{parentName:"p"},"TextFields")," podemos usar un ",(0,o.kt)("inlineCode",{parentName:"p"},"TextEditingController")," que siempre esta escuchando cambios en ",(0,o.kt)("inlineCode",{parentName:"p"},"TextField")," correspondiente."),(0,o.kt)("h3",{id:"crear-texteditingcontroller"},"Crear TextEditingController"),(0,o.kt)("p",null,"Definimos un Controller para cada TextField en nuestro widget:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"final emailController = TextEditingController();\nfinal passwordController = TextEditingController();\n")),(0,o.kt)("h3",{id:"llamar-a-m\xe9todo-dispose"},"Llamar a m\xe9todo dispose()"),(0,o.kt)("p",null,"Se sobreescribe el m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"dispose()")," del widget para limpiar los TextFields cuando se remueve el widget de la pantalla:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"@override\nvoid dispose() {\n  emailController.dispose();\n  passwordController.dispose();\n  super.dispose();\n}\n")),(0,o.kt)("h3",{id:"asignar-controllers"},"Asignar controllers"),(0,o.kt)("p",null,"Para cada TextField debemos asignar su controlador correspondiente a trav\xe9s de la propiedad ",(0,o.kt)("inlineCode",{parentName:"p"},"controller"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"TextFormField(\n  controller: emailController,\n  // ...\n),\n\nTextFormField(\n  controller: passwordController,\n  // ...\n),\n")),(0,o.kt)("h3",{id:"acceder-al-valor-del-controller"},"Acceder al valor del controller"),(0,o.kt)("p",null,"En el m\xe9todo ",(0,o.kt)("inlineCode",{parentName:"p"},"onPressed")," del bot\xf3n enviar agregamos la siguiente validacion:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},'// Si todos los datos son correctos se debe mostrar un AlertDialog\nif (_formKey.currentState!.validate()) {\n  showDialog(context: context, builder: (context) {\n    // Accedemos al valor de cada Controller con la propiedad Text.\n    return AlertDialog(\n      content: Text("Email: ${emailController.text}, password: ${passwordController.text}"),\n    );\n  });\n}\n')),(0,o.kt)("h2",{id:"tarea-en-clases"},"Tarea en clases"),(0,o.kt)("p",null,"Usando el ejemplo anterior:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},'Agregar validaci\xf3n para la contrase\xf1a (que tenga m\xe1s de 6 caracteres) de lo contrario mostrar un mensaje de error que diga: "La contrase\xf1a debe contener m\xe1s de 6 caracteres"')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Agregar un \xedcono (Icons.person) al InputDecoration del correo electr\xf3nico.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Agregar un \xedcono (Icons.key) al InputDecoration de la contrase\xf1a.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Por debajo de los TextFields agregar un componente ",(0,o.kt)("inlineCode",{parentName:"p"},"Switch"),' con una etiqueta que diga "Recordar usuario y contrase\xf1a" y manejar su correspondiente estado ',(0,o.kt)("em",{parentName:"p"},"true")," o ",(0,o.kt)("em",{parentName:"p"},"false"),"."))))}p.isMDXComponent=!0}}]);