"use strict";(self.webpackChunkuniversity_docs=self.webpackChunkuniversity_docs||[]).push([[7827],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),f=i,m=p["".concat(s,".").concat(f)]||p[f]||d[f]||a;return n?r.createElement(m,o(o({ref:t},c),{},{components:n})):r.createElement(m,o({ref:t},c))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5913:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return p}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],l={id:"flutter13",title:"ListView"},s=void 0,u={unversionedId:"flutter/flutter13",id:"flutter/flutter13",title:"ListView",description:"Es un widget que nos permite mostrar una lista widgets y permite hacer scroll de la pantalla. Podemos definir sus hijos a trav\xe9s de la propiedad children.",source:"@site/docs/flutter/flutter13.md",sourceDirName:"flutter",slug:"/flutter/flutter13",permalink:"/cursos/docs/flutter/flutter13",tags:[],version:"current",frontMatter:{id:"flutter13",title:"ListView"},sidebar:"flutterSidebar",previous:{title:"BottomNavigationBar",permalink:"/cursos/docs/flutter/flutter12"},next:{title:"Peticiones HTTP en Flutter",permalink:"/cursos/docs/flutter/flutter14"}},c=[{value:"ListView Builder",id:"listview-builder",children:[],level:2},{value:"Ejercicio pr\xe1ctico",id:"ejercicio-pr\xe1ctico",children:[],level:2}],d={toc:c};function p(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Es un widget que nos permite mostrar una lista widgets y permite hacer scroll de la pantalla. Podemos definir sus hijos a trav\xe9s de la propiedad ",(0,a.kt)("inlineCode",{parentName:"p"},"children"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},'class EstudiantesScreen extends StatelessWidget {\n  const EstudiantesScreen({Key? key}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text("Lista de estudiantes"),\n      ),\n      body: ListView(\n        children: [\n          ListTile(\n            title: Text("Maria Perez"),\n            subtitle: Text("Ing. Industrial"),\n            leading: Icon(Icons.school),\n            onTap: () {\n                // Evento tap del usuario\n            },\n          ),\n\n          ListTile(\n            title: Text("Mario Rodriguez"),\n            subtitle: Text("Lic. en Contabilidad"),\n            leading: Icon(Icons.school),\n            onTap: () {\n\n            },\n          ),\n        ],\n      ),\n    );\n  }\n}\n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"El widget ",(0,a.kt)("inlineCode",{parentName:"p"},"ListTile")," es un widget que representa una fila (item) de una lista. Tipicamente contiene texto e iconos a la derecha e izquierda.")),(0,a.kt)("h2",{id:"listview-builder"},"ListView Builder"),(0,a.kt)("p",null,"Para trabajar con listas largas y/o din\xe1micas podemos utilizar ",(0,a.kt)("inlineCode",{parentName:"p"},"ListView Builder"),", que a diferencia del constructor convencional que crea todos los elementos de una vez, ",(0,a.kt)("inlineCode",{parentName:"p"},"ListView builder")," los crea mientras se va haciendo scroll en la pantalla."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},'class EstudiantesScreen extends StatelessWidget {\n\n  const EstudiantesScreen({Key? key, required this.estudiantes}) : super(key: key);\n\n  final List<String> estudiantes;\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text("Lista de estudiantes"),\n      ),\n      body: ListView.builder(\n        itemCount: estudiantes.length,\n        itemBuilder: (context, index) {\n          return ListTile(\n            title: Text(estudiantes[index]),\n          );\n        })\n    );\n  }\n}\n')),(0,a.kt)("h2",{id:"ejercicio-pr\xe1ctico"},"Ejercicio pr\xe1ctico"),(0,a.kt)("p",null,"Usando ListView builder del ejemplo anterior:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Cuando el usuario presione el nombre del estudiante se debe navegar hacia otra pantalla.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Se debe enviar como par\xe1metro el nombre del estudiante y mostrarlo en la otra pantalla."))))}p.isMDXComponent=!0}}]);