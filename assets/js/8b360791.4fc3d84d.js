"use strict";(self.webpackChunkuniversity_docs=self.webpackChunkuniversity_docs||[]).push([[8045],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,k=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return n?a.createElement(k,l(l({ref:t},c),{},{components:n})):a.createElement(k,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=p;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var u=2;u<i;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7913:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return p}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],o={id:"flutter5",title:"Widgets - parte 1"},s=void 0,u={unversionedId:"flutter/flutter5",id:"flutter/flutter5",title:"Widgets - parte 1",description:"Estructura del proyecto",source:"@site/docs/flutter/flutter5.md",sourceDirName:"flutter",slug:"/flutter/flutter5",permalink:"/cursos/docs/flutter/flutter5",tags:[],version:"current",frontMatter:{id:"flutter5",title:"Widgets - parte 1"},sidebar:"flutterSidebar",previous:{title:"Clases y objetos",permalink:"/cursos/docs/flutter/flutter4"},next:{title:"Widgets - parte 2",permalink:"/cursos/docs/flutter/flutter6"}},c=[{value:"Estructura del proyecto",id:"estructura-del-proyecto",children:[{value:"Archivos .dart",id:"archivos-dart",children:[],level:3}],level:2},{value:"Widgets",id:"widgets",children:[],level:2},{value:"Widgets esenciales",id:"widgets-esenciales",children:[],level:2},{value:"Widgets b\xe1sicos",id:"widgets-b\xe1sicos",children:[],level:2},{value:"Stateful y Stateless widgets",id:"stateful-y-stateless-widgets",children:[],level:2},{value:"Clase pr\xe1ctica",id:"clase-pr\xe1ctica",children:[],level:2}],d={toc:c};function p(e){var t=e.components,o=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"estructura-del-proyecto"},"Estructura del proyecto"),(0,i.kt)("p",null,"En un proyecto inicial de Flutter tendremos los siguientes directorios:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"android"),": este folder contiene un proyecto nativo de Android que es usado para ejecutar la aplicaci\xf3n en ",(0,i.kt)("strong",{parentName:"p"},"Android"),". En este caso el c\xf3digo Flutter es compilado e inyectado en este proyecto de Android, teniendo como resultado una aplicaci\xf3n Android nativa.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"ios"),": este folder contiene un proyecto nativo de XCode para ejecutar la aplicaci\xf3n en ",(0,i.kt)("strong",{parentName:"p"},"iOS"),". Al igual que en Android se compila y se inyecta el c\xf3digo Flutter para tener un aplicaci\xf3n iOS nativa.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"lib"),": dentro de este folder vamos a encontrar archivos ",(0,i.kt)("inlineCode",{parentName:"p"},".dart")," que contienen el c\xf3digo de nuestra aplicaci\xf3n. Ac\xe1 es donde vamos a trabajar todo lo relacionado a nuestro proyecto y funcionalidades.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"test"),": contiene c\xf3digo relacionado a pruebas unitarias.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"web"),": contiene archivos relacionados al proyecto web de Flutter, que desde la versi\xf3n 2.0 nos permite crear aplicaciones web. En este caso el c\xf3digo se compila y traduce a HTML, CSS y Javascript para crear una Single Page Application (SPA).")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Archivo ",(0,i.kt)("inlineCode",{parentName:"p"},"pubspect.yaml"),": es el archivo de configuraci\xf3n y lo usaremos para:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Definir configuraciones generales del proyecto como nombre, descripci\xf3n o versi\xf3n."),(0,i.kt)("li",{parentName:"ul"},"Administrar dependencias (librerias)."),(0,i.kt)("li",{parentName:"ul"},"Administrar assets (recursos) que deberan estar disponibles en nuestro proyecto."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},".metadata")," y ",(0,i.kt)("inlineCode",{parentName:"p"},"packages.md"),": son archivos autogenerados para rastrear propiedades y dependencias del proyecto de Flutter. Nunca lo vamos a editar manualmente."))),(0,i.kt)("h3",{id:"archivos-dart"},"Archivos .dart"),(0,i.kt)("p",null,"Al crear archivos con ",(0,i.kt)("inlineCode",{parentName:"p"},".dart")," para nuestras clases o widgets se deben nombre con nomenclatura ",(0,i.kt)("inlineCode",{parentName:"p"},"snake case")," en min\xfascula. Por ejemplo al tener 2 clases de la siguiente forma:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"// estudiante.dart\nclass Estudiante {\n\n}\n\n// estudiante_regular.dart\nclass EstudianteRegular {\n\n}\n")),(0,i.kt)("p",null,"El nombre del archivo ser\xeda ",(0,i.kt)("inlineCode",{parentName:"p"},"estudiante.dart")," y en el caso de nombres compuestos como ",(0,i.kt)("inlineCode",{parentName:"p"},"EstudianteRegular")," el nombre del archivo ser\xeda ",(0,i.kt)("inlineCode",{parentName:"p"},"estudiante_regular.dart"),"."),(0,i.kt)("h2",{id:"widgets"},"Widgets"),(0,i.kt)("p",null,"Para construir una aplicaci\xf3n en Flutter, debemos usar o crear Widgets que son los componentes de la interfaz de usuario. Los widgets describen como se deberian ver depediendo de su configuraci\xf3n y estado (state). Cuando el estado de un Widget cambia, el widget se actualiza al hacer la transici\xf3n de un estado a otro."),(0,i.kt)("h2",{id:"widgets-esenciales"},"Widgets esenciales"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"MaterialApp"),": es un Widget que define una aplicaci\xf3n que usa ",(0,i.kt)("inlineCode",{parentName:"p"},"Material Design")," y configura un navegador de nivel superior para aplicaci\xf3n.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"Scaffold"),": implementa la estructura visual de Material Design. Provee diferentes opciones para nuestro layout como Barras de navegacion, botones flotantes."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"MaterialApp(\n  home: Scaffold(\n    appBar: AppBar(\n      title: Text('Titulo')\n    ),\n    body: Center(\n      child: MyWidget(),\n    ),\n  ),\n)\n")),(0,i.kt)("h2",{id:"widgets-b\xe1sicos"},"Widgets b\xe1sicos"),(0,i.kt)("p",null,"Flutter por defecto viene con un conjunto de Widgets, de los cuales los m\xe1s usados son los siguientes:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Text"),": nos permite crear texto con estilos en nuestra app.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"Text('Texto simple'),\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Center"),": nos permite centrar otro widget que este anidado dentro.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"Center(\n    child: Text('Texto Simple'),\n),\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Row, Columns"),": nos permiten crear layouts flexibles en direcci\xf3n vertical y horizontal.")),(0,i.kt)("p",null,"Ejemplo con Row:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"Row(\n    children: [\n      Text('Elemento 1'),\n      Text('Elemento 2'),\n      Text('Elemento 3'),\n    ]\n),\n")),(0,i.kt)("p",null,"Ejemplo con Column:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"Column(\n    children: [\n      Text('Elemento 1'),\n      Text('Elemento 2'),\n      Text('Elemento 3'),\n    ]\n),\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Container"),": nos permite crear un elemento visualmente rectangular. Puede tener ",(0,i.kt)("inlineCode",{parentName:"li"},"margin"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"padding")," y un tama\xf1o definido.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"Container(\n  padding: EdgeInsets.all(5),\n  margin: EdgeInsets.only(top: 10),\n  child: Text('Esto es un container'),\n),\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"NOTA: La clase ",(0,i.kt)("strong",{parentName:"p"},"EdgeInsets")," especifica los desplazamientos en t\xe9rminos de bordes visuales, izquierdo, superior, derecho e inferior.")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"TextButton"),": nos permite crear un elemento de tipo bot\xf3n con una etiqueta de texto. Por defecto no tiene bordes:")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"TextButton(\n    onPressed: () {\n\n    },\n    child: const Text('Bot\xf3n 1'),\n),\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"TextField"),": nos permite crear un elemento para ingresar texto.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"TextField(\n  decoration: InputDecoration(\n    border: OutlineInputBorder(),\n    labelText: 'Nombre',\n  ),\n),\n")),(0,i.kt)("h2",{id:"stateful-y-stateless-widgets"},"Stateful y Stateless widgets"),(0,i.kt)("p",null,"Un Widget puede ser stateful (con estado) o stateless (sin estado). Si un widget puede cambiar mientras el usuario interactua con este, entonces es stateful."),(0,i.kt)("p",null,"Un stateless Widget nunca cambia. Por ejemplo Icon, IconButton o Text son stateless widgets. Estos heredan de la clase ",(0,i.kt)("inlineCode",{parentName:"p"},"StatelessWidget"),"."),(0,i.kt)("p",null,"Un stateful widget es din\xe1mico. Por ejemplo pueden cambiar de apariencia en respuesta a eventos causados por interacci\xf3n del usuario o cuando reciben informaci\xf3n. Por ejemplo: Checkbox, Radio, Slider, TextField son stateful widgets. Estos hereadan de la clase ",(0,i.kt)("inlineCode",{parentName:"p"},"StatefulWidget"),"."),(0,i.kt)("h2",{id:"clase-pr\xe1ctica"},"Clase pr\xe1ctica"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Crear un stateless widget llamado ",(0,i.kt)("inlineCode",{parentName:"p"},"Calculadora"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Usar los Widgets vistos anteriormente para crear un interfaz con la siguiente estructura:"))),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Imagen",src:n(2785).Z,width:"630",height:"867"})),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Investigar como agregar estilos al Widget ",(0,i.kt)("inlineCode",{parentName:"li"},"Text"),".")))}p.isMDXComponent=!0},2785:function(e,t,n){t.Z=n.p+"assets/images/calc-f499d4f17b6b224c299faf65363d8b8a.jpeg"}}]);