"use strict";(self.webpackChunkuniversity_docs=self.webpackChunkuniversity_docs||[]).push([[8825],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,f=p["".concat(u,".").concat(m)]||p[m]||s[m]||o;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8699:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return d},default:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={id:"android10",title:"Interactividad"},u=void 0,c={unversionedId:"android/android10",id:"android/android10",title:"Interactividad",description:"Para esta secci\xf3n vamos a retomar el proyecto de Fragmentos.",source:"@site/docs/android/android10.md",sourceDirName:"android",slug:"/android/android10",permalink:"/cursos/docs/android/android10",tags:[],version:"current",frontMatter:{id:"android10",title:"Interactividad"},sidebar:"androidSidebar",previous:{title:"Ciclo de vida",permalink:"/cursos/docs/android/android9"},next:{title:"Examen Parcial I",permalink:"/cursos/docs/android/exam1"}},d=[{value:"Layout",id:"layout",children:[],level:2},{value:"Clase R",id:"clase-r",children:[],level:2},{value:"Modificar clase FirstFragment",id:"modificar-clase-firstfragment",children:[],level:2},{value:"Event Listener",id:"event-listener",children:[],level:2}],s={toc:d};function p(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Para esta secci\xf3n vamos a retomar el proyecto de Fragmentos.")),(0,o.kt)("h2",{id:"layout"},"Layout"),(0,o.kt)("p",null,"En nuestro layout ",(0,o.kt)("inlineCode",{parentName:"p"},"fragment_first")," vamos a agregar 3 componentes: 1 TextView y 2 Buttons, definiendo algunas propiedades:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"id"),": counter_text, button_add, button_subtract"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Text"),': "0", "Sumar", "Restar"'),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"margin"),": 20 dp para cada elemento.")),(0,o.kt)("h2",{id:"clase-r"},"Clase R"),(0,o.kt)("p",null,"La clase ",(0,o.kt)("inlineCode",{parentName:"p"},"R")," contiene la definici\xf3n a todos los recursos disponibles en nuestro proyecto. Por ejemplo si tenemos un elemento con el siguiente atributo id:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},'android:id="@+id/example_button"')),(0,o.kt)("p",null,"Podemos referenciar ese id desde kotlin de la siguiente forma:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"R.id.example_button")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Esta clase es autogenerada por Android")),(0,o.kt)("h2",{id:"modificar-clase-firstfragment"},"Modificar clase FirstFragment"),(0,o.kt)("p",null,"En la parte superior de la clase FirstFragment vamos a agregar 4 propiedades:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"var counter: Int = 0\n\nlateinit var counterText: TextView\nlateinit var buttonAdd: Button\nlateinit var buttonSubtract: Button\n")),(0,o.kt)("p",null,"En la funci\xf3n ",(0,o.kt)("inlineCode",{parentName:"p"},"onCreateView")," sustituimos el c\xf3digo existente por el siguiente:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"// creamos una referencia de la vista del fragmento\nvar view = inflater.inflate(R.layout.fragment_first, container, false)\n\n// creamos una referencia a cada elemento dentro de la vista (usando su respectivo id)\ncounterText = view.findViewById(R.id.counter_text)\nbuttonAdd = view.findViewById(R.id.button_add)\nbuttonSubtract = view.findViewById(R.id.button_subtract)\n\nreturn view\n")),(0,o.kt)("p",null,"Luego sobreescribimos la funci\xf3n ",(0,o.kt)("inlineCode",{parentName:"p"},"onViewCreated"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"override fun onViewCreated(view: View, savedInstanceState: Bundle?) {\n  super.onViewCreated(view, savedInstanceState)\n  // agregar codigo\n}\n")),(0,o.kt)("h2",{id:"event-listener"},"Event Listener"),(0,o.kt)("p",null,"Dentro de la funci\xf3n ",(0,o.kt)("inlineCode",{parentName:"p"},"onViewCreated")," vamos a agregar el siguiente c\xf3digo para agregar eventListeners a nuestros botones y configurar la etiqueta del contador:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"counterText.text = counter.toString()\n\nbuttonAdd.setOnClickListener {\n    counter++\n    counterText.text = counter.toString()\n}\n\nbuttonSubtract.setOnClickListener {\n    counter--\n    counterText.text = counter.toString()\n}\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Un EventListener es una funci\xf3n que se ejecuta cuando ocurre un evento determinado (clic, tap, drag, scroll, etc...).")))}p.isMDXComponent=!0}}]);