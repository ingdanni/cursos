"use strict";(self.webpackChunkuniversity_docs=self.webpackChunkuniversity_docs||[]).push([[410],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return m}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=p(a),m=r,k=d["".concat(s,".").concat(m)]||d[m]||c[m]||i;return a?n.createElement(k,l(l({ref:t},u),{},{components:a})):n.createElement(k,l({ref:t},u))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5314:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return d}});var n=a(7462),r=a(3366),i=(a(7294),a(3905)),l=["components"],o={id:"flutter17",title:"UNP app - parte 1"},s=void 0,p={unversionedId:"flutter/flutter17",id:"flutter/flutter17",title:"UNP app - parte 1",description:"Intro",source:"@site/docs/flutter/flutter17.md",sourceDirName:"flutter",slug:"/flutter/flutter17",permalink:"/cursos/docs/flutter/flutter17",tags:[],version:"current",frontMatter:{id:"flutter17",title:"UNP app - parte 1"},sidebar:"flutterSidebar",previous:{title:"Tarea Clon de Whatsapp",permalink:"/cursos/docs/flutter/hw-wsp-clone"},next:{title:"UNP app - parte 2",permalink:"/cursos/docs/flutter/flutter18"}},u=[{value:"Intro",id:"intro",children:[],level:2},{value:"Diagrama inicio de sesi\xf3n",id:"diagrama-inicio-de-sesi\xf3n",children:[],level:2},{value:"API",id:"api",children:[],level:2},{value:"Iniciar proyecto",id:"iniciar-proyecto",children:[],level:2},{value:"Crear modelo LoginResponse",id:"crear-modelo-loginresponse",children:[],level:2},{value:"Crear servicio AuthService",id:"crear-servicio-authservice",children:[],level:2},{value:"Asignaci\xf3n 1",id:"asignaci\xf3n-1",children:[],level:2}],c={toc:u};function d(e){var t=e.components,o=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"intro"},"Intro"),(0,i.kt)("p",null,"En esta secci\xf3n vamos a desarrollar una aplicaci\xf3n con Flutter que tendr\xe1 los siguientes m\xf3dulos:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Inicio de sesi\xf3n."),(0,i.kt)("li",{parentName:"ol"},"Lista de cursos (actuales)."),(0,i.kt)("li",{parentName:"ol"},"Historial de cursos (anteriores)."),(0,i.kt)("li",{parentName:"ol"},"Lista de maestros (activos).")),(0,i.kt)("p",null,"Para navegar entre pantallas usaremos un widget ",(0,i.kt)("inlineCode",{parentName:"p"},"Drawer")," (Navigation Drawer en Android)."),(0,i.kt)("h2",{id:"diagrama-inicio-de-sesi\xf3n"},"Diagrama inicio de sesi\xf3n"),(0,i.kt)("p",null,"La aplicaci\xf3n deber\xe1 mantener la sesi\xf3n del usuario una vez se haya logueado con sus credenciales correspondiente, se guardar\xe1 un ",(0,i.kt)("inlineCode",{parentName:"p"},"TOKEN")," de usuario localmente para validar si el usuario ha iniciado sesi\xf3n. Este flujo esta representado por el siguiente diagrama:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"./assets/diagram1.png",src:a(9669).Z,width:"321",height:"461"})),(0,i.kt)("h2",{id:"api"},"API"),(0,i.kt)("p",null,"En esta aplicaci\xf3n se obtendr\xe1 toda la informaci\xf3n desde un API en la siguiente direcci\xf3n:"),(0,i.kt)("p",null,"URL: ",(0,i.kt)("a",{parentName:"p",href:"https://shrouded-harbor-95996.herokuapp.com"},"https://shrouded-harbor-95996.herokuapp.com")),(0,i.kt)("p",null,"A continuaci\xf3n se detallan los endpoints:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Endpoit"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Descripci\xf3n"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"POST ",(0,i.kt)("inlineCode",{parentName:"td"},"/auth/login")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Login de usuario. Recibe 2 valores (username, password)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"GET ",(0,i.kt)("inlineCode",{parentName:"td"},"/auth/user")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Obtiene informaci\xf3n del usuario logueado")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"GET ",(0,i.kt)("inlineCode",{parentName:"td"},"/courses")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Lista de cursos actuales")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"GET ",(0,i.kt)("inlineCode",{parentName:"td"},"/courses/:id")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Detalle de un curso (se filtra por id)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"GET ",(0,i.kt)("inlineCode",{parentName:"td"},"/courses/history")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Historial de cursos")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},"GET ",(0,i.kt)("inlineCode",{parentName:"td"},"/teachers")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Lista de maestros")))),(0,i.kt)("h2",{id:"iniciar-proyecto"},"Iniciar proyecto"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Crear un proyecto en blanco de Flutter.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Agregar las siguientes dependencias en el archivo ",(0,i.kt)("inlineCode",{parentName:"p"},"pubspec"),":"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"dependencies:\n  http: ^0.13.4\n  shared_preferences: ^2.0.15\n")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("inlineCode",{parentName:"p"},"SharedPreferences")," es un Plugin que nos permite manejar una base de datos local de tipo llave/valor (equivalente a SharedPreferences en Android y UserDefaults en iOS). Este plugin no se debe usar para guardar datos sensibles de nuestra aplicaci\xf3n pero en el caso de este ejemplo es aceptable.")),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Crear los siguientes directorios dentro de ",(0,i.kt)("inlineCode",{parentName:"p"},"/lib"),":"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"ui"),(0,i.kt)("li",{parentName:"ul"},"ui/screens"),(0,i.kt)("li",{parentName:"ul"},"ui/widgets"),(0,i.kt)("li",{parentName:"ul"},"models"),(0,i.kt)("li",{parentName:"ul"},"services"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Crear los siguientes archivos dentro de ",(0,i.kt)("inlineCode",{parentName:"p"},"ui/screens"),":"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"login_screen.dart"),(0,i.kt)("li",{parentName:"ul"},"main_navigation_screen.dart"),(0,i.kt)("li",{parentName:"ul"},"courses_screen.dart"),(0,i.kt)("li",{parentName:"ul"},"history_screen.dart"),(0,i.kt)("li",{parentName:"ul"},"teachers_screen.dart"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Crear un archivo llamado ",(0,i.kt)("inlineCode",{parentName:"p"},"auth_service.dart")," en ",(0,i.kt)("inlineCode",{parentName:"p"},"/services"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Crear un archivo llamado ",(0,i.kt)("inlineCode",{parentName:"p"},"login_response.dart")," en ",(0,i.kt)("inlineCode",{parentName:"p"},"/models"),"."))),(0,i.kt)("h2",{id:"crear-modelo-loginresponse"},"Crear modelo LoginResponse"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Cuando consultamos nuestra API para iniciar sesi\xf3n obtenemos la siguiente respuesta JSON (con 3 campos):")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "id": "21D2ACF2-282B-4D3B-41E1-5B64825A0F5C",\n    "token": "D78BE8E5-C2EC-3E41-E648-44F237897B55eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c",\n    "isAdmin": true\n}\n')),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Haciendo uso de la herramienta ",(0,i.kt)("a",{parentName:"li",href:"https://app.quicktype.io/"},"Quicktype")," vamos a generar una clase en Dart a partir del JSON obtenido. Nos dirigimos al sitio y pegamos el JSON, luego seleccionamos Dart como lenguaje, le asignamos un nombre como ",(0,i.kt)("inlineCode",{parentName:"li"},"LoginResponse")," y copiamos el c\xf3digo generado en nuestro proyecto en el archivo ",(0,i.kt)("inlineCode",{parentName:"li"},"models/login_response.dart"),".")),(0,i.kt)("h2",{id:"crear-servicio-authservice"},"Crear servicio AuthService"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"En el archivo ",(0,i.kt)("inlineCode",{parentName:"li"},"services/auth_service.dart")," creamos una clase llamada AuthService y agregamos una constante de tipo ",(0,i.kt)("inlineCode",{parentName:"li"},"String")," llamada url.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"class AuthService {\n\n  static const String url = 'https://shrouded-harbor-95996.herokuapp.com';\n\n}\n")),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Luego agregamos una funci\xf3n llamada ",(0,i.kt)("inlineCode",{parentName:"li"},"getToken()")," que nos servir\xe1 para consultar si hay un ",(0,i.kt)("strong",{parentName:"li"},"token de usuario")," almacenado en la aplicaci\xf3n, en el caso que no haya un ",(0,i.kt)("strong",{parentName:"li"},"token"),", el valor ser\xe1 nulo.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},'static Future<String?> getToken() async {\n  final pref = await SharedPreferences.getInstance();\n  final token = pref.getString("user_token");\n\n  return token;\n}\n')),(0,i.kt)("ol",{start:3},(0,i.kt)("li",{parentName:"ol"},"Luego agregamos una funci\xf3n llamada ",(0,i.kt)("inlineCode",{parentName:"li"},"login(...)")," que recibe 2 par\xe1metros y se encarga de consultar el API para autenticar el usuario. Nos retorna un valor ",(0,i.kt)("inlineCode",{parentName:"li"},"Future")," de tipo ",(0,i.kt)("inlineCode",{parentName:"li"},"LoginResponse"),":")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"static Future<LoginResponse> login(String username, String password) async {\n  final response = await http.post(\n    Uri.parse(url + '/auth/login'),\n    headers: <String, String>{\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n    body: jsonEncode(<String, String>{\n      'username': username,\n      'password': password,\n    }),\n  );\n\n  if (response.statusCode == 200) {\n    final body = jsonDecode(response.body);\n    final data = LoginResponse.fromJson(body);\n\n    final pref = await SharedPreferences.getInstance();\n    await pref.setString(\"user_token\", data.token);\n\n    return data;\n  } else {\n    throw Exception('Error al iniciar sesi\xf3n. Su usuario o contrase\xf1a son incorrectos.');\n  }\n}\n")),(0,i.kt)("ol",{start:4},(0,i.kt)("li",{parentName:"ol"},"Se agregan los ",(0,i.kt)("inlineCode",{parentName:"li"},"imports")," que sean necesarios.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-dart"},"import '../models/login_response.dart';\nimport 'package:http/http.dart' as http;\nimport 'package:shared_preferences/shared_preferences.dart';\nimport 'dart:convert';\n")),(0,i.kt)("h2",{id:"asignaci\xf3n-1"},"Asignaci\xf3n 1"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Agregar en AuthService una funci\xf3n para llamar al endpoint ",(0,i.kt)("inlineCode",{parentName:"p"},"/auth/user"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Agregar una clase llamada CoursesService y agregar funciones para llamar los endpoints relacionados a los cursos.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Agregar una clase llamada TeachersService y agregar funciones para llamar los endpoints relacionados a los maestros.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Leer sobre el widget ",(0,i.kt)("inlineCode",{parentName:"p"},"Drawer"),"."))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Recuerde crear los archivos y modelos necesarios.")))}d.isMDXComponent=!0},9669:function(e,t,a){t.Z=a.p+"assets/images/diagram1-16d6e61c72abe45907f85e2036fede7c.png"}}]);